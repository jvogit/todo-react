scalar DateTime

type User {
    id: ID!
    username: String!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type Todo {
    id: ID!
    completed: Boolean!
    item: String!
    createdAt: DateTime!
    updatedAt: DateTime!
}

input TodoInput {
    id: ID!
    completed: Boolean!
    item: String!
}

input RegisterInput {
    username: String!
    email: String!
    password: String!
}

type RegisterResponse {
    success: Boolean!
}

input LoginInput {
    usernameOrEmail: String!
    password: String!
}

type LoginResponse {
    success: Boolean!
    token: String!
    user: User!
}

type Query {
    me: User!
    todos: [Todo!]!
}

type Mutation {
    register(input: RegisterInput!): RegisterResponse
    login(input: LoginInput!): LoginResponse
    createTodo(item: String!): Todo
    updateTodo(todo: TodoInput!): Todo
    logout: Boolean
}